リレーショナルデータベースとは

    データベースのバケツの中にテーブルが入っている状態
    ・テーブル同士は複数のリレーション（関連）をつける

    データをためるエリアだけではなく、「RDBMS」という管理システムがついていて管理をしている

RDBMSの役割
    ①データの管理
        制約でデータの整合性を保つ
    ②トランザクション管理
        コミット、ロールバックで更新タイミングを制御
    ③同時実行制御管理
        ロック・アンロックで複数ユーザのアクセスを制御
    ④障害復旧管理
        バックアップファイル・ログファイルで復旧
    ⑤セキュリティ管理
        ユーザーマイにアクセス制御

☆ 特に「①データの管理」はデータの整合性を保つという観点でテーブル設計においてコツが必要なのでこの授業で学ぶ

リレーショナルデータベースの基本構造
▷基本構造
    データを「表（テーブル）」形式で表現
    縦が「列、カラム、属性、アトリビュート、、etc」
    横は「行、レコード、タプル、組、、、etc」

▷リレーショナルデータベース
    複数の表同士関係を持たせ、整合性を保つ

-----------------------------------------------------------------------------

システム開発とは
  ソフトウエアの開発
    ①自社製品開発・販売
      例）マイクロソフト社　word,excel
          SKY株式会社　ERPパッケージ

    ②他企業のために開発を請け負う       ---世の中のシステム開発ではこのケースが多い
      例）各都道府県のため：ワクチン予約システムを開発
        　各企業のため：ERPパッケージのカスタム

  ☆要望を適切にシステムの形にする際、クライアントと開発者の認識合わせがとても重要
    ただ、、、業界業種、違った環境で育てば同じ用語でもイメージするものが異なる（顧客はほぼIT素人）

  この認識合わせに重要なのが
    設計工程の成果物である「設計書」
    SEと顧客、SE同士、SEとプログラマの間で情報の伝達や情報内容の確認が必要。
    ⇒可視化する必要がある


システム開発工程
  システム開発プロセス
    システム設計（基本計画・外部設計・内部設計・プログラム設計）
    企画
    　　①要件定義
          要望をまとめる　優先順位をつける
        ②外部設計
          システムの仕様を決める（画面とか）      上流工程
        ------------------------------------------------  
        ③内部設計                                下流工程
          システムの作り方を設計する
        ④製造
          プログラムを作る
        ⑤テスト
          プログラムをテストする
        ⑥リリース準備
          データ移行をする　運用を始める
    

    ①要件定義プロセス
      企画書や要件定義書を作成し、クライアントと合意
      やりたいイメージを具体的にしてイメージアップ
    ②外部設計
      システムの概要を設計する
      「UIの検討」「DBの構造を検討する」
      画面設計書やER図、テーブル設計書を作成してクライアントと合意
      ここでクライアントが具体的な完成イメージを持てるとよい
    ③内部設計
      外部設計をもとに、実装に向けた詳細設計をする
      機能分割
    ④製造プロセス
      プログラミング、DB構築etc 実装
    ⑤テストプロセス
      ながれをさかのぼるような形でテストを行う、
      規模は小⇒大
      システムテスト～ユーザーテスト～運用テストetc
      各フェーズのテスト実施・品質評価
    ⑥リリース準備
      リリースに向けた準備を行う
      開発環境から本番環境への移行　etc
      ⇒これでやっとリリースできる
      リリースしたらメンテナンスフェーズに入る（運用、訂正、仕様追加などの修正）
      ⇒設計は、リリース後の運用や仕様追加に耐えうるような将来を見据えて検討しなければならない
    
☆この科目ではDB設計について体系的に学び、実務で役に立つ技術と知識を身に着ける
